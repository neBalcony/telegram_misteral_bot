from aiogram.filters import CommandStart, Command, CommandObject
from aiogram import Router
from aiogram import types
from aiogram.utils.formatting import Text
from aiogram import types
from sqlalchemy import select

from db import SessionLocal
from models import Invite
from filters import AdminFilter


router = Router()


@router.message(Command("invite"), AdminFilter())
async def invite_username(message, command: CommandObject):
    args = command.args
    if not args:
        await message.reply(
            "–ù–µ—Ç—É –∏–º—è üôÉ\n–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–æ —Å–ª–æ–≤–æ: @username", parse_mode=None
        )
        return

    if "@" in args:
        args = args.replace("@", "")

    args = args.strip()
    if len(args.split(" ")) > 1:
        await message.reply(
            "–ù–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∏–º—è üôÉ\n–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–æ —Å–ª–æ–≤–æ: @username", parse_mode=None
        )
        return
    with SessionLocal() as session:
        invite = (
            session.execute(select(Invite).where(Invite.username == args))
            .scalars()
            .first()
        )
        if invite:
            await message.reply(f"–ü–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å @{args} —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω", parse_mode=None)
            return

        invite = Invite(username=args)
        session.add(invite)
        session.commit()

    await message.reply(f"–ü–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å @{args} –ø—Ä–∏–≥–ª–∞—à–µ–Ω", parse_mode=None)


@router.message(CommandStart())
async def start(message: types.Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Mistral.ai.\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è –≤ inline-—Ä–µ–∂–∏–º–µ ‚Äî –≤–≤–µ–¥–∏—Ç–µ @<–º–æ–π_–Ω–∏–∫> –≤ –ª—é–±–æ–º —á–∞—Ç–µ.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/help ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    content = Text(text) 
    
    await message.reply(**content.as_kwargs())


@router.message(Command("help"))
async def help(message: types.Message):
    text = (
        "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Mistral.ai.\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è –≤ inline-—Ä–µ–∂–∏–º–µ ‚Äî –≤–≤–µ–¥–∏—Ç–µ @<–º–æ–π_–Ω–∏–∫> –≤ –ª—é–±–æ–º —á–∞—Ç–µ.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/help ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    content = Text(text) 
    
    await message.reply(**content.as_kwargs())

    
